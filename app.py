from flask import Flask, request, jsonify
import requests
import os

app = Flask(__name__)

# Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = os.environ.get("TELEGRAM_API_KEY")
CHAT_ID = os.environ.get("TELEGRAM_CHAT_ID")
URL = f"https://api.telegram.org/bot{TOKEN}"

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
system_enabled = True
current_temperature = 24
forecast_days = 1

# –ö–æ–º–∞–Ω–¥—ã reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
reply_keyboard = {
    "keyboard": [
        [{"text": "üì° –°—Ç–∞—Ç—É—Å –¥–æ–º–∞"}],
        [{"text": "üå° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É"}],
        [{"text": "üå¶ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"}],
        [{"text": "üîå –í–∫–ª/–í—ã–∫–ª —Å–∏—Å—Ç–µ–º—É"}]
    ],
    "resize_keyboard": True
}

# –•–µ–Ω–¥–ª–µ—Ä Telegram webhook
@app.route('/webhook', methods=['POST'])
def telegram_webhook():
    global system_enabled, forecast_days, current_temperature
    data = request.get_json()

    if "message" in data:
        chat_id = data["message"]["chat"]["id"]
        text = data["message"].get("text", "")

        # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º–∞–Ω–¥ —Å / –∏–∑ BotFather
        if text.startswith("/status") or text == "üì° –°—Ç–∞—Ç—É—Å –¥–æ–º–∞":
            send_message(chat_id, get_status(), reply_keyboard)

        elif text.startswith("/settemp") or text == "üå° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É":
            temp_text = get_temp_inline_text(current_temperature)
            send_inline_keyboard(chat_id, temp_text, get_temp_buttons(current_temperature))

        elif text.startswith("/forecast") or text == "üå¶ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã":
            forecast = get_forecast_message(forecast_days)
            send_inline_keyboard(chat_id, forecast, get_forecast_buttons())

        elif text.startswith("/system") or text == "üîå –í–∫–ª/–í—ã–∫–ª —Å–∏—Å—Ç–µ–º—É":
            system_enabled = not system_enabled
            status = "–≤–∫–ª—é—á–µ–Ω–∞" if system_enabled else "–≤—ã–∫–ª—é—á–µ–Ω–∞"
            send_message(chat_id, f"–°–∏—Å—Ç–µ–º–∞ {status}", reply_keyboard)

    elif "callback_query" in data:
        query = data["callback_query"]
        chat_id = query["message"]["chat"]["id"]
        message_id = query["message"]["message_id"]
        data_val = query["data"]

        if data_val.startswith("temp+"):
            current_temperature = min(36, current_temperature + 1)
        elif data_val.startswith("temp-"):
            current_temperature = max(16, current_temperature - 1)
        elif data_val == "temp_save":
            send_edit(chat_id, message_id, f"‚úÖ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {current_temperature}¬∞C")
            return "ok"

        elif data_val == "f+":
            forecast_days = min(3, forecast_days + 1)
        elif data_val == "f-":
            forecast_days = max(1, forecast_days - 1)

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ inline-—Å–æ–æ–±—â–µ–Ω–∏—è
        if data_val.startswith("temp"):
            send_edit_keyboard(chat_id, message_id, get_temp_inline_text(current_temperature), get_temp_buttons(current_temperature))
        elif data_val.startswith("f"):
            send_edit_keyboard(chat_id, message_id, get_forecast_message(forecast_days), get_forecast_buttons())

    return jsonify(ok=True)

# --- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ---

def send_message(chat_id, text, reply_markup=None):
    payload = {"chat_id": chat_id, "text": text, "reply_markup": reply_markup}
    requests.post(f"{URL}/sendMessage", json=payload)

def send_inline_keyboard(chat_id, text, buttons):
    payload = {
        "chat_id": chat_id,
        "text": text,
        "reply_markup": {"inline_keyboard": buttons}
    }
    requests.post(f"{URL}/sendMessage", json=payload)

def send_edit(chat_id, message_id, new_text):
    requests.post(f"{URL}/editMessageText", json={
        "chat_id": chat_id,
        "message_id": message_id,
        "text": new_text
    })

def send_edit_keyboard(chat_id, message_id, new_text, buttons):
    requests.post(f"{URL}/editMessageText", json={
        "chat_id": chat_id,
        "message_id": message_id,
        "text": new_text,
        "reply_markup": {"inline_keyboard": buttons}
    })

def get_temp_inline_text(temp):
    return f"–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:\n\n[ {temp // 10} ][ {temp % 10} ]¬∞C"

def get_temp_buttons(temp):
    return [
        [{"text": "‚ûñ", "callback_data": "temp-"}, {"text": "‚ûï", "callback_data": "temp+"}],
        [{"text": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", "callback_data": "temp_save"}]
    ]

def get_forecast_buttons():
    return [
        [{"text": "‚ûñ", "callback_data": "f-"}, {"text": "‚ûï", "callback_data": "f+"}]
    ]

def get_status():
    return "üè† –°—Ç–∞—Ç—É—Å –¥–æ–º–∞:\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: 24.0¬∞C\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: 40%\n–ì–∞–∑: 0.0%"

def get_forecast_message(days):
    # –ó–∞–≥–ª—É—à–∫–∞. –ü–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç –ò–ò/API.
    return f"üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ {days} –¥–µ–Ω—å(–¥–Ω—è):\n08:00 ‚Äî 21.3¬∞C üå•\n12:00 ‚Äî 24.1¬∞C üåû\n18:00 ‚Äî 20.2¬∞C üåß\n00:00 ‚Äî 18.3¬∞C ‚òÅÔ∏è\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: 63%\nüè≠ –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞: —É–º–µ—Ä–µ–Ω–Ω—ã–π"

if __name__ == '__main__':
    app.run(debug=True, port=5000)
