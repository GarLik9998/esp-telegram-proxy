import os
import json
import requests
from flask import Flask, request, jsonify

app = Flask(__name__)

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã ---
TOKEN = os.environ.get("TELEGRAM_API_KEY")
CHAT_ID = os.environ.get("TELEGRAM_CHAT_ID")
URL = f"https://api.telegram.org/bot{TOKEN}"

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è ---
system_enabled = True
current_temperature = 24
forecast_days = 1

# --- Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ---
reply_keyboard = {
    "keyboard": [
        [{"text": "üì° –°—Ç–∞—Ç—É—Å –¥–æ–º–∞"}],
        [{"text": "üå° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É"}],
        [{"text": "üå¶ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"}],
        [{"text": "üîå –í–∫–ª/–í—ã–∫–ª —Å–∏—Å—Ç–µ–º—É"}]
    ],
    "resize_keyboard": True
}

# --- Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
def get_temp_buttons(temp):
    return [
        [{"text": "‚ûñ", "callback_data": "temp-"}, {"text": "‚ûï", "callback_data": "temp+"}],
        [{"text": "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", "callback_data": "temp_save"}]
    ]

def get_forecast_buttons():
    return [
        [{"text": "‚ûñ", "callback_data": "f-"}, {"text": "‚ûï", "callback_data": "f+"}]
    ]

# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ ---
def get_temp_inline_text(temp):
    return f"–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:\n\n[ {temp // 10} ][ {temp % 10} ]¬∞C"

def get_status():
    return "üè† –°—Ç–∞—Ç—É—Å –¥–æ–º–∞:\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: 24.0¬∞C\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: 40%\n–ì–∞–∑: 0.0%"

def get_forecast_message(days):
    return f"üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ {days} –¥–µ–Ω—å(–¥–Ω—è):\n08:00 ‚Äî 21.3¬∞C üå•\n12:00 ‚Äî 24.1¬∞C üåû\n18:00 ‚Äî 20.2¬∞C üåß\n00:00 ‚Äî 18.3¬∞C ‚òÅÔ∏è\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: 63%\nüè≠ –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞: —É–º–µ—Ä–µ–Ω–Ω—ã–π"

# --- Telegram –æ—Ç–ø—Ä–∞–≤–∫–∞ ---
def send_message(chat_id, text, reply_markup=None):
    payload = {"chat_id": chat_id, "text": text}
    if reply_markup:
        payload["reply_markup"] = json.dumps(reply_markup)
    requests.post(f"{URL}/sendMessage", json=payload)

def send_inline_keyboard(chat_id, text, buttons):
    payload = {
        "chat_id": chat_id,
        "text": text,
        "reply_markup": {"inline_keyboard": buttons}
    }
    requests.post(f"{URL}/sendMessage", json=payload)

def send_edit(chat_id, message_id, new_text):
    requests.post(f"{URL}/editMessageText", json={
        "chat_id": chat_id,
        "message_id": message_id,
        "text": new_text
    })

def send_edit_keyboard(chat_id, message_id, new_text, buttons):
    requests.post(f"{URL}/editMessageText", json={
        "chat_id": chat_id,
        "message_id": message_id,
        "text": new_text,
        "reply_markup": {"inline_keyboard": buttons}
    })

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook-–∑–∞–ø—Ä–æ—Å–æ–≤ ---
@app.route('/webhook', methods=['POST'])
def telegram_webhook():
    global current_temperature, forecast_days, system_enabled

    data = request.get_json()

    if "message" in data:
        chat_id = data["message"]["chat"]["id"]
        text = data["message"].get("text", "")

        if text.startswith("/start"):
            send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–æ–º üè†\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:", reply_keyboard)

        elif text.startswith("/status") or text == "üì° –°—Ç–∞—Ç—É—Å –¥–æ–º–∞":
            send_message(chat_id, get_status(), reply_keyboard)

        elif text.startswith("/settemp") or text == "üå° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É":
            send_inline_keyboard(chat_id, get_temp_inline_text(current_temperature), get_temp_buttons(current_temperature))

        elif text.startswith("/forecast") or text == "üå¶ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã":
            send_inline_keyboard(chat_id, get_forecast_message(forecast_days), get_forecast_buttons())

        elif text.startswith("/system") or text == "üîå –í–∫–ª/–í—ã–∫–ª —Å–∏—Å—Ç–µ–º—É":
            system_enabled = not system_enabled
            status = "–≤–∫–ª—é—á–µ–Ω–∞" if system_enabled else "–≤—ã–∫–ª—é—á–µ–Ω–∞"
            send_message(chat_id, f"–°–∏—Å—Ç–µ–º–∞ {status}", reply_keyboard)

    elif "callback_query" in data:
        query = data["callback_query"]
        chat_id = query["message"]["chat"]["id"]
        message_id = query["message"]["message_id"]
        data_val = query["data"]

        if data_val == "temp+":
            current_temperature = min(36, current_temperature + 1)
        elif data_val == "temp-":
            current_temperature = max(16, current_temperature - 1)
        elif data_val == "temp_save":
            send_edit(chat_id, message_id, f"‚úÖ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {current_temperature}¬∞C")
            return jsonify(ok=True)

        elif data_val == "f+":
            forecast_days = min(3, forecast_days + 1)
        elif data_val == "f-":
            forecast_days = max(1, forecast_days - 1)

        if data_val.startswith("temp"):
            send_edit_keyboard(chat_id, message_id, get_temp_inline_text(current_temperature), get_temp_buttons(current_temperature))
        elif data_val.startswith("f"):
            send_edit_keyboard(chat_id, message_id, get_forecast_message(forecast_days), get_forecast_buttons())

    return jsonify(ok=True)

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ ---
@app.route('/', methods=['GET'])
def index():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç."

if __name__ == '__main__':
    app.run(debug=True, port=5000)
